name: Build and Deploy Code

on: [push, pull_request] # push # [push, pull_request] # [push]
  # push:
  #   branches: ["main"] #["main", "another_branch"]
  #     - "main"
  #     - "another_branch"
  # pull_request:
  #   branches:
  #     - "test_branch"

# env:
#   DATABASE_HOSTNAME: localhost
#   DATABASE_PORT: 5432
#   DATABASE_PASSWORD: admin
#   DATABASE_NAME: fastapi
#   DATABASE_USERNAME: postgres
#   SECRET_KEY: jakisdlugiStringDoHashowainia
#   ALGORITHM: HS256
#   ACCESS_TOKEN_EXPIRE_MINUTES: 30


jobs: 
  job1:
    environment: # it is not available in private repo on github 
      name: testing # in github/settings/environment you can create environments and then use them here.
    env:
      DATABASE_HOSTNAME: ${{secrets.DATABASE_HOSTNAME}} #localhost # ${{secrets.FATABASE_HOSTNAME}} - in real projects you do not want to push all sensitive data to repository. To solve that problem in github.com you can go to settings/secrets and provide sensitive data in global env variables. And then you can easily refer to them by ${{secrets.VARIABLE_NAME}} 
      # Similar thing you can make in settings/environments.
      DATABASE_PORT: ${{secrets.DATABASE_PORT}} #5432
      DATABASE_PASSWORD: ${{secrets.DATABASE_PASSWORD}} #admin
      DATABASE_NAME: ${{secrets.DATABASE_NAME}} #fastapi
      DATABASE_USERNAME: ${{secrets.DATABASE_USERNAME}} # postgres
      SECRET_KEY: ${{secrets.SECRET_KEY}} # jakisdlugiStringDoHashowainia
      ALGORITHM: ${{secrets.ALGORITHM}} # HS256
      ACCESS_TOKEN_EXPIRE_MINUTES: ${{secrets.ACCESS_TOKEN_EXPIRE_MINUTES}} # 30
    
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
          POSTGRES_DB: ${{secrets.DATABASE_NAME}}_test
          ports:
          -5432:5432
          options: >- # it is copied from docs. I should ensure that python tests are run after postgres instance is initialized.
            --health-cmd pg_isready
            --health-interval 10s
            --health-timeout 5s
            --health-retries 5

    runs-on: ubuntu-latest
    steps:
      - name: pulling git repo
        uses: actions/checkout@v2
      - name: say hi to imfilip
        run: echo "hello imfilip!"
      # - name: installing python
      #   run: sudo apt install python3
      - name: Install python version 3.9
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"
      - name: Upgrade pip
        run: python -m pip install --upgrade pip
      - name: installing all dependencies
        run: pip install -r requirements.txt
      - name: tests with pytest
        run: | 
          pip install pytest
          pytest
